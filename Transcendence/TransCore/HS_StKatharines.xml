<?xml version="1.0" encoding="utf-8"?>

<TranscendenceModule>

<!-- LEVEL V ITEMS -->

	<!-- itIncandescentStrawberries
	
	EXTRA DATA:
	
	expireTime:			After this time, food is rotted
	status:				Current state
							Nil =			Fresh
							'ripe =			Ripe
							'rotted =		Rotted
	
	-->

	<ItemType UNID="&HS_itIncandescentStrawberries;"
			name=				"[case(s) of ]strawberries"
			level=				"5"
			value=				"250"
			mass=				"5"
			frequency=			"notrandom"
			numberAppearing=	"1d12"
			attributes=			"consumable, consumerGood, food, freshFood, lux, skExports, specialty"

			description=		"Fresh strawberries are a delicacy found only near living worlds."
			>

		<Image imageID="&CORE_rsItems1;" imageX="288" imageY="0" imageWidth="96" imageHeight="96"/>
		
		<StaticData>
			<expireTime>5400</expireTime>
			<priceIncrease>200</priceIncrease>
		</StaticData>
		
		<Events>
			<GetName>
				(list (cat "[case of " (stkFreshFoodStatus gItem) " ]strawberries") 0x02)
			</GetName>
			
			<GetTradePrice>
				(stkFreshFoodPrice gItem)
			</GetTradePrice>
			
			<OnUpdate>
				(stkFreshFoodUpdate gSource gItem)
			</OnUpdate>
		</Events>
	</ItemType>

	<ItemType UNID="&HS_itIncandescentPeaches;"
			name=				"[case(s) of ]white peaches"
			level=				"5"
			value=				"300"
			mass=				"5"
			frequency=			"notrandom"
			numberAppearing=	"1d12"
			attributes=			"consumable, consumerGood, food, freshFood, lux, skExports, specialty"

			description=		"White peaches are a delicacy found only near living worlds."
			>

		<Image imageID="&CORE_rsItems1;" imageX="288" imageY="0" imageWidth="96" imageHeight="96"/>
		
		<StaticData>
			<expireTime>7200</expireTime>
			<priceIncrease>150</priceIncrease>
		</StaticData>
		
		<Events>
			<GetName>
				(list (cat "[case of " (stkFreshFoodStatus gItem) " ]white peaches") 0x02)
			</GetName>
			
			<GetTradePrice>
				(stkFreshFoodPrice gItem)
			</GetTradePrice>
			
			<OnUpdate>
				(stkFreshFoodUpdate gSource gItem)
			</OnUpdate>
		</Events>
	</ItemType>

	<ItemType UNID="&HS_itIncandescentBellFruit;"
			name=				"[case(s) of ]bellfruits"
			level=				"5"
			value=				"450"
			mass=				"5"
			frequency=			"notrandom"
			numberAppearing=	"1d12"
			attributes=			"consumable, consumerGood, food, freshFood, lux, skExports, specialty"

			description=		"Bellfruits are a delicacy found only near living worlds."
			>

		<Image imageID="&CORE_rsItems1;" imageX="288" imageY="0" imageWidth="96" imageHeight="96"/>
		
		<StaticData>
			<expireTime>7200</expireTime>
			<priceIncrease>150</priceIncrease>
		</StaticData>
		
		<Events>
			<GetName>
				(list (cat "[case of " (stkFreshFoodStatus gItem) " ]bellfruit") 0x02)
			</GetName>
			
			<GetTradePrice>
				(stkFreshFoodPrice gItem)
			</GetTradePrice>
			
			<OnUpdate>
				(stkFreshFoodUpdate gSource gItem)
			</OnUpdate>
		</Events>
	</ItemType>

	<ItemType UNID="&HS_itIncandescentLucuma;"
			name=				"[case(s) of ]lucumas"
			level=				"5"
			value=				"300"
			mass=				"5"
			frequency=			"notrandom"
			numberAppearing=	"1d12"
			attributes=			"consumable, consumerGood, food, freshFood, lux, skExports, specialty"

			description=		"Lucumas are a delicious fruit found only near living worlds."
			>

		<Image imageID="&CORE_rsItems1;" imageX="288" imageY="0" imageWidth="96" imageHeight="96"/>
		
		<StaticData>
			<expireTime>10800</expireTime>
			<priceIncrease>100</priceIncrease>
		</StaticData>
		
		<Events>
			<GetName>
				(list (cat "[case of " (stkFreshFoodStatus gItem) " ]lucumas") 0x02)
			</GetName>
			
			<GetTradePrice>
				(stkFreshFoodPrice gItem)
			</GetTradePrice>
			
			<OnUpdate>
				(stkFreshFoodUpdate gSource gItem)
			</OnUpdate>
		</Events>
	</ItemType>

	<ItemType UNID="&HS_itIncandescentCoffee;"
			name=				"[kilo(s) of ]Incandescent coffee"
			level=				"6"
			value=				"800"
			mass=				"1"
			frequency=			"notrandom"
			numberAppearing=	"1d12"
			attributes=			"consumable, consumerGood, food, lux, skExports, specialty"

			description=		"Coffee beans from the tropical regions of the planet Incandescent are famous throughout Human Space."
			>

		<Image imageID="&CORE_rsItems1;" imageX="288" imageY="0" imageWidth="96" imageHeight="96"/>
	</ItemType>

<!-- St Katharine's Star System -->

	<SystemType UNID="&HS_ssStKatharine;" 
				name=				"St. Katharine's Star"
				noRandomEncounters=	"true"
				noExtraEncounters=	"true"
				backgroundID=		"&GLXY_rsBrightStarSpace;"
				spaceColor=			"#1c150f"
				>

		<Tables>
			<!-- Random Stations -->
			
			<FriendlyOuterStations>
				<RandomStationTable>
					<Station chance="20" type="&HS_stContainerHabitat;"/>
					<Station chance="20" type="&HS_stCommonwealthSlums;"/>
					<Station chance="15" type="&HS_stFuelDepot;"/>
					<Station chance="15" type="&HS_stIceFarm;"/>
					<Station chance="10" type="&HS_stArmorDealer;"/>
					<Station chance="10" type="&HS_stArmsDealer;"/>
					<Station chance="10" type="&HS_stSistersOfDomina;"/>
					<Station chance="5"  type="&HS_stHotel;"/>
					<Station chance="5"  type="&HS_stArmsDealerRasiermesser;"/>
					<Station chance="5"  type="&HS_stArmsDealerMakayev;"/>
				</RandomStationTable>
			</FriendlyOuterStations>

			<FriendlyStations>
				<RandomStationTable>
					<Station chance="20" type="&HS_stCorporateEnclave;"/>
					<Station chance="20" type="&HS_stCommonwealthResidentials;"/>
					<Station chance="15" type="&HS_stFuelDepot;"/>
					<Station chance="15" type="&HS_stHotel;"/>
					<Station chance="10" type="&HS_stContainerHabitat;"/>
					<Station chance="10" type="&HS_stCommonwealthSlums;"/>
					<Station chance="10" type="&HS_stArmorDealer;"/>
					<Station chance="10" type="&HS_stArmsDealer;"/>
					<Station chance="10" type="&HS_stManufacturingPlant;"	ignoreLimits="true"/>
					<Station chance="5"  type="&HS_stTinkerGathering;"/>
					<Station chance="5"  type="&HS_stCommonwealthDryDock;"/>
					<Station chance="5"  type="&HS_stArmsDealerRasiermesser;"/>
					<Station chance="5"  type="&HS_stArmsDealerMakayev;"/>
					<Station chance="5"  type="&HS_stInsuranceCompany;"/>
					<Station chance="5"  type="&HS_stSistersOfDomina;"/>
					<Station chance="2"  type="&HS_stArmsDealerBushido;"/>
				</RandomStationTable>
			</FriendlyStations>

			<EnemyStations>
				<RandomStationTable>
					<Station chance="15" type="&HS_stOutlawHaven;"				noReinforcements="true"/>
					<Station chance="15" type="&HS_stCharonPirateOutpost3;"	noReinforcements="true"/>
					<Station chance="10" type="&HS_stTerroristCamp;"			noReinforcements="true"/>
					<Station chance="10" type="&HS_stMarauderOutpost;"			noReinforcements="true"/>
					<Station chance="5"  type="&HS_stTerroristCompound;"		noReinforcements="true"/>
					<Station chance="5"  type="&HS_stMarauderCompound;"		noReinforcements="true"/>
					<Station chance="5"  type="&HS_stDrugCartelOutpost;"		noReinforcements="true"/>
					<Station chance="5"  type="&HS_stWeaponsCache;"			noReinforcements="true"/>
					<Station chance="5"  type="&HS_stSungSlaveCamp;"			noReinforcements="true"/>
				</RandomStationTable>
			</EnemyStations>
		</Tables>

		<SystemGroup>

			<Station type="&GLXY_stStarClassA0;" name="St. Katharine's Star"/>

			<AddAttribute attributes="ATypeSystem"/>
			<AddTerritory minRadius="0"		maxRadius="480"		attributes="innerSystem, metallicComp, moltenZone"/>
			<AddTerritory minRadius="480"	maxRadius="800"		attributes="lifeZone, waterComp, biosphereZone"/>
			<AddTerritory minRadius="800"	maxRadius="0"		attributes="outerSystem, waterComp, iceZone"/>

			<!-- Redglow -->

			<Orbitals distance="50" angle="random">
				<Group>
					<Primary>
						<Station type="&GLXY_stVolcanicPlanetoidSizeG;" name="Redglow" showOrbit="true" />
					</Primary>

					<Orbitals distance="24" angle="equidistant">
						<Group>
							<Lookup table="StargateOutbound"/>
							
							<Siblings radiusInc="18">
								<Code>
									;	Don't create the navSign unless the stargate is there.
									;	In some adventures, for example, we don't have this gate.

									(if (sysGetObjectByName 'Outbound)
										(block (navSignObj)
											(setq navSignObj (sysCreateStation &HS_stCommonwealthNavSign; (sysOrbitPos aOrbit)))
											(objSetData navSignObj 'Sign (typTranslate &HS_ssStKatharine; 'navSignWarningTitle))
											(objSetData navSignObj 'Info (typTranslate &HS_ssStKatharine; 'navSignWarningDesc))
											)
										)
								</Code>
							</Siblings>
						</Group>
						
						<Location attributes="planet, planetary, redglowOrbit, terrestrial, volcanic"/>
						<Location attributes="planet, planetary, redglowOrbit, terrestrial, volcanic"/>
						<Location attributes="planet, planetary, redglowOrbit, terrestrial, volcanic"/>
						<Location attributes="planet, planetary, redglowOrbit, terrestrial, volcanic"/>
					</Orbitals>
				</Group>
			</Orbitals>

			<!-- Radiant -->

			<Orbitals distance="110" angle="random">
				<Group>
					<Primary>
						<Station type="&GLXY_stDesertTerrestrialSizeH;" name="Radiant" showOrbit="true"/>
					</Primary>

					<Orbitals count="3" distance="16" angle="equidistant">
						<Location attributes="desert, planet, planetary, radiantOrbit, terrestrial"/>
					</Orbitals>
				</Group>
			</Orbitals>

			<!-- Incandescent -->

			<Orbitals distance="260" angle="random">
				<Group>
					<Primary>
						<Station type="&GLXY_stBiosphereTerrestrialSizeI;" name="Incandescent" showOrbit="true"/>
						
						<Station type="&HS_stStKatsArcology;"/>
					</Primary>
					
					<Orbitals count="9" distance="54" angle="equidistant">
						<RandomStationTable>
							<Station chance="5"  type="&HS_stSistersOfDomina;"/>
							<Station chance="5"  type="&HS_stHotel;"/>
							<Station chance="15" type="&HS_stCorporateEnclave;"/>
							<Station chance="10" type="&HS_stFuelDepot;"/>
							<Station chance="20" type="&HS_stCommonwealthResidentials;" noMapLabel="true"/>
							<Station chance="5"  type="&HS_stInsuranceCompany;"/>
							<Station chance="10" type="&HS_stArmsDealerRasiermesser;"/>
							<Station chance="5"  type="&HS_stArmsDealerBushido;"/>
							<Station chance="5"  type="&HS_stAutonDealer;"/>
							<Station chance="10" type="&HS_stContainerHabitat;" noMapLabel="true"/>
							<Station chance="10" type="&HS_stManufacturingPlant;" ignoreLimits="true"/>
						</RandomStationTable>
					</Orbitals>
					
					<Orbitals count="12-16" distance="70" angle="equidistant">
						<RandomStationTable>
							<Station chance="40" type="&HS_stContainerHabitat;" noMapLabel="true"/>
							<Station chance="30" type="&HS_stCommonwealthSlums;" noMapLabel="true"/>
							<Station chance="30" type="&HS_stManufacturingPlant;" ignoreLimits="true"/>
						</RandomStationTable>
					</Orbitals>
				</Group>
			</Orbitals>

			<!-- Majestic planetary system -->

			<Orbitals distance="420" angle="random">
				<Group>

					<!-- Majestic -->

					<Primary>
						<Station type="&GLXY_stHydrogenGasGiantSizeM;" name="Majestic" showOrbit="true" />
					</Primary>

					<!-- Majestic I -->

					<Orbitals distance="22" angle="random">
						<Group>
							<Primary>
								<Station type="&GLXY_stRockyPlanetoidSizeE;" name="Nearworld"/>
							</Primary>
							
							<Orbitals count="1d3-1" distance="10" angle="equidistant">
								<Location attributes="majesticRegion, majesticIOrbit, moon, planetary, rocky"/>
							</Orbitals>
						</Group>
					</Orbitals>

					<!-- Majestic II -->

					<Orbitals distance="45" angle="random">
						<Group>
							<Primary>
								<Station type="&GLXY_stIcePlanetoidSizeG;" name="Farworld"/>
							</Primary>

							<Orbitals count="2" distance="16" angle="equidistant">
								<Location attributes="ice, majesticRegion, majesticIIOrbit, moon, planetary"/>
							</Orbitals>
						</Group>
					</Orbitals>

					<!-- Trojans -->

					<LocationAttributes attributes="majesticRegion, majesticTrojans">
						<Lookup table="AsteroidCompactTrojans50"/>
					</LocationAttributes>

					<LocationAttributes attributes="majesticRegion, majesticTrojans">
						<Lookup table="AsteroidCompactAntiTrojans50"/>
					</LocationAttributes>
				</Group>
			</Orbitals>

			<!-- Fulgent -->

			<Orbitals distance="10" scale="light-minute" angle="random">
				<Group>
					<Primary>
						<Station type="&GLXY_stIcePlanetoidSizeG;" name="Fulgent" showOrbit="true"/>
					</Primary>

					<Orbitals distance="18" angle="equidistant">
						<Group>
							<Lookup table="StargateInbound"/>
							
							<Siblings radiusInc="18">
								<Code>
									;	Don't create the navSign unless the stargate is there.
									;	In some adventures, for example, we don't have this gate.

									(if (sysGetObjectByName 'Inbound)
										(block (navSignObj)
											(setq navSignObj (sysCreateStation &HS_stCommonwealthNavSign; (sysOrbitPos aOrbit)))
											(objSetData navSignObj 'Sign (typTranslate &HS_ssStKatharine; 'navSignWelcomeTitle))
											(objSetData navSignObj 'Info (typTranslate &HS_ssStKatharine; 'navSignWelcomeDesc))
											)
										)
								</Code>
							</Siblings>
						</Group>
						
						<Location attributes="fulgentOrbit, ice, planet, planetary, terrestrial"/>
						<Location attributes="fulgentOrbit, ice, planet, planetary, terrestrial"/>
						<Location attributes="fulgentOrbit, ice, planet, planetary, terrestrial"/>
						<Location attributes="fulgentOrbit, ice, planet, planetary, terrestrial"/>
					</Orbitals>
				</Group>
			</Orbitals>

			<!-- Icy Ring -->

			<LocationAttributes attributes="iceRing">
				<Orbitals distance="780" angle="random">
					<Lookup table="AsteroidIceBelt500"/>
				</Orbitals>
			</LocationAttributes>
			
			<!-- Tenebrous -->

			<Orbitals distance="17" scale="light-minute" angle="random">
				<Group>
					<Primary>
						<Station type="&GLXY_stPrimordialPlanetoidSizeG;" name="Tenebrous" showOrbit="true"/>
					</Primary>
					
					<Orbitals distance="20" angle="random">
						<Label attributes="planet, planetary, planetoid, primordial, tenebrousOrbit"/>
					</Orbitals>
				</Group>
			</Orbitals>

			<!-- Create more stargates in case an extension added more links -->

			<Lookup table="HumanSpaceStargates"/>

			<!-- Populate Redglow Region -->

			<RandomLocation locationCriteria="*redglowOrbit" noWarnings="true">
				<Station type="&HS_stIocrymMonument;" />
				<Station type="&HS_stFuelDepot;" />
				<Lookup chance="55" table="FriendlyStations" />
				<Lookup chance="55" table="FriendlyStations" />
			</RandomLocation>

			<!-- Populate Radiant Region -->

			<RandomLocation count="2-3" locationCriteria="*radiantOrbit" noWarnings="true">
				<Lookup table="FriendlyStations" />
			</RandomLocation>

			<!-- Populate Majestic Region -->

			<RandomLocation count="4-6" locationCriteria="*majesticRegion">
				<Lookup chance="70" table="FriendlyOuterStations" />
			</RandomLocation>

			<!-- Populate Fulgent Region -->

			<RandomLocation locationCriteria="*fulgentOrbit" noWarnings="true">
				<Station type="&HS_stSistersOfDomina;" optional="true"/>
				<Station chance="25" type="&HS_stFuelDepot;" />
				<Lookup chance="25" table="FriendlyOuterStations" />
				<Lookup chance="25" table="FriendlyOuterStations" />
			</RandomLocation>

			<!-- Populate Ice Ring -->

			<RandomLocation count="2d4+4" locationCriteria="*iceRing" noWarnings="true">
				<Lookup table="EnemyStations"/>
			</RandomLocation>

		</SystemGroup>
		
		<Language>
			<Text id="navSignWelcomeTitle">Welcome!</Text>
			<Text id="navSignWelcomeDesc">Welcome to St. Katharine's Star, capital of the Commonwealth and metropolitan jewel of Human Space.</Text>
			
			<Text id="navSignWarningTitle">Travel\nWarning!</Text>
			<Text id="navSignWarningDesc">

				WARNING! Systems beyond St. Katharine's Star are not controlled 
				by the Commonwealth. By entering this stargate you agree to hold 
				the Commonwealth Transport System immune to liability in the 
				event of injury, involuntary servitude, or death.

			</Text>
		</Language>
	</SystemType>

<!-- GLOBALS -->

	<Globals>
		(block Nil
			(setq stkDistanceToStK (lambda (nodeID nodesChecked)
				(switch
					(eq nodeID 'SK)
						0
						
					(block (bestDist)
						; Add this node to the list of nodes that we've checked
						(setq nodesChecked (append nodesChecked (list nodeID)))
						
						; For all the stargates, return the closest distance
						(setq bestDist 1000)
						(enum (sysGetStargates nodeID) theGate
							(block (theDestNode theDist)
								(setq theDestNode (sysGetStargateDestinationNode nodeID theGate))
								(if (not (find nodesChecked theDestNode))
									(block Nil
										(setq theDist (stkDistanceToStK theDestNode nodesChecked))
										(if (ls theDist bestDist)
											(setq bestDist theDist)
											)
										)
									)
								)
							)
							
						; Done
						(add bestDist 1)
						)
					)
				))
				
			(setq stkFreshFoodStatus (lambda (theItem)
				(switch
					(eq (itmGetData theItem "status") 'rotted)
						"rotted"
						
					(eq (itmGetData theItem "status") 'ripe)
						"ripe"

					"fresh"
					)
				))
				
			(setq stkFreshFoodPrice (lambda (theItem)
				(switch
					; If rotted, then food is worthless
					(eq (itmGetData theItem "status") 'rotted)
						0
						
					; If we're in the St Kat's system, then normal value
					(eq (sysGetNode) 'SK)
						(itmGetPrice theItem)

					; Price increases the further away from StK's
					(add (itmGetPrice theItem) (multiply (itmGetStaticData theItem "priceIncrease") (min 10 (stkDistanceToStK (sysGetNode)))))
					)
				))
				
			(setq stkFreshFoodUpdate (lambda (theSource theItem)
				(block ((status (itmGetData theItem "status"))
						(expireTime (itmGetData theItem "expireTime")))
						
					(switch
						; If the food has rotted, mark it
						(and (not (eq status 'rotted)) (gr (unvGetTick) expireTime))
							(block Nil
								(objSetItemData theSource theItem "status" 'rotted (itmGetCount theItem))
								(if (eq theSource gPlayerShip)
									(plyMessage gPlayer "The " (itmGetName theItem 0x80) " in your cargo hold have rotted")
									)
								)

						; If the food has turned ripe, mark it
						(and (not status) (gr (add (unvGetTick) 1800) expireTime))
							(block Nil
								(objSetItemData theSource theItem "status" 'ripe (itmGetCount theItem))
								(if (eq theSource gPlayerShip)
									(plyMessage gPlayer "The " (itmGetName theItem 0x80) " in your cargo hold look ripe")
									)
								)
						)
					)
				))
			)
	</Globals>
	
<!-- BEHAVIORS -->

	<ShipClass UNID="&HS_evStKatsTrafficBehavior;"
			class=				"(St Katharine's traffic behavior)"
			virtual=			"true"
			
			attributes=			"behaviorClass"
			>

		<Events>
			<OrderDockAtStKats>
				(block Nil
					(shpOrder gSource 'dock aDockObj)
					(shpOrder gSource 'waitForThreat (random 10 200))
					(objSetData gSource "0010201F_status" 'dockedAtNewVictoria)
					)
			</OrderDockAtStKats>
			
			<OrderEnterSystem>
				(objSetData gSource "0010201F_status" 'enteredSystem)
			</OrderEnterSystem>
			
			<OnOrdersCompleted>
				(block (status dockedAt allLoot)
					; Different order depending on our current state
					(setq status (objGetData gSource "0010201F_status"))
					(setq dockedAt (shpGetDockObj gSource))
					
					; If we're docked at an object, dump any loot that we found
					(if (and dockedAt
							(objHasAttribute dockedAt "populated")
							
							; Compose a list of all loot on board that the station
							; might want to buy from us.
							
							(setq allLoot (filter (objGetItems gSource "*~mf U") theItem
								(objGetBuyPrice dockedAt theItem)
								))
							)
						(block Nil
							(enum allLoot theItem (objRemoveItem gSource theItem))
							(enum allLoot theItem (objAddItem dockedAt theItem))
							)
						)
					
					; Figure out what to do next
					(switch
						(eq status 'enteredSystem)
							(block Nil
								(setq theTarget (random (sysFindObject gSource "T +arcology")))
								(shpOrder gSource 'orbit (sysFindObject Nil "TNV +stKatsArcology;") 35 (random 20 40))
								(shpOrder gSource 'dock theTarget)
								(shpOrder gSource 'waitForThreat (random 10 60))
								(objSetData gSource "0010201F_status" 'dockedAtNewVictoria)
								)
								
						(eq status 'dockedAtNewVictoria)
							(block (roll allWrecks)
								; When leaving new victoria, orbit around for a bit
								(shpOrder gSource 'orbit (sysFindObject Nil "TNV +stKatsArcology;") 35 (random 20 40))
								
								; Randomly choose a path
								(setq roll (random 1 100))
								(switch
									; Gate out
									(leq roll 30)
										(block Nil
											(shpOrder gSource 'gate)
											(objSetData gSource "0010201F_status" 'leavingSystem)
											)
											
									; If there are wrecks in the area, loot them
									(and (leq (objGetDestiny gSource) 180)
											(not (objHasAttribute gSource "freighter"))
											(leq (random 1 100) 50)
											
											; Compose a list of all wrecks in the area
											
											(setq allWrecks (rpgFindWrecksToSalvage gSource '0010201F_marked))
											)
										(block (destObj)
											(setq destObj (random allWrecks))
											(shpOrder gSource 'loot destObj)
											(objSetData destObj "0010201F_marked" True)
											(objSetData gSource "0010201F_status" 'dockedAtStation)
											)
											
									; Dock at a random station in the system
									(block (theTarget)
										(setq theTarget (random (sysFindObject gSource "TAF +populated; -arcology; -occupation;")))
										(shpOrder gSource 'dock theTarget)
										(shpOrder gSource 'waitForThreat (random 10 20))
										(objSetData gSource "0010201F_status" 'dockedAtStation)
										)
									)
								)
								
						(eq status 'dockedAtStation)
							(block (roll allWrecks)
								; Randomly choose a path
								(setq roll (random 1 100))
								(switch
									; Gate out
									(leq roll 30)
										(block Nil
											(shpOrder gSource 'gate)
											(objSetData gSource "0010201F_status" 'leavingSystem)
											)
											
									; If there are wrecks in the area, loot them
									(and (leq (objGetDestiny gSource) 180)
											(not (objHasAttribute gSource "freighter"))
											(leq (random 1 100) 50)
											
											; Compose a list of all wrecks in the area
											
											(setq allWrecks (rpgFindWrecksToSalvage gSource '0010201F_marked))
											)
										(block (destObj)
											(setq destObj (random allWrecks))
											(shpOrder gSource 'loot destObj)
											(objSetData destObj "0010201F_marked" True)
											(objSetData gSource "0010201F_status" 'dockedAtStation)
											)
											
									; Dock at new victoria
									(leq roll 80)
										(block (theTarget)
											(setq theTarget (random (sysFindObject gSource "T +arcology")))
											(shpOrder gSource 'orbit (sysFindObject Nil "TNV +stKatsArcology;") 35 (random 20 40))
											(shpOrder gSource 'dock theTarget)
											(shpOrder gSource 'waitForThreat (random 10 60))
											(objSetData gSource "0010201F_status" 'dockedAtNewVictoria)
											)
											
									; Dock at a random station in the system
									(block (theTarget)
										(setq theTarget (random (sysFindObject gSource "TAF +populated; -arcology; -occupation;")))
										(shpOrder gSource 'dock theTarget)
										(shpOrder gSource 'waitForThreat (random 10 20))
										(objSetData gSource "0010201F_status" 'dockedAtStation)
										)
									)
								)
						)
						
					; If we were docked at an object that we just looted, then destroy the object
					(if (and (objGetData dockedAt "0010201F_marked")
							(ls (objGetProperty dockedAt 'mass) 2000)
							(not (objGetProperty dockedAt 'immutable))
							)
						(objDestroy dockedAt gSource)
						)
					)
			</OnOrdersCompleted>
		</Events>
	</ShipClass>
	
<!-- TABLES -->

	<ShipTable unid="&HS_tbStKatsTraffic;">
		<Table>
			<Ship chance="2"	class="&HS_scAntaresI;"/>
			<Ship chance="4"	class="&HS_scAntaresII;"/>
			<Ship chance="3"	class="&HS_scAntaresV;"/>
			<Ship chance="3"	class="&HS_scEI7000;"/>
			<Ship chance="8"	class="&HS_scEI500;"/>
			<Ship chance="9"	class="&HS_scEI200;"/>
			<Ship chance="14"	class="&HS_scEI100;"/>
			<Ship chance="5"	class="&HS_scIAVLight;"/>
			<Ship chance="10"	class="&HS_scIAVMedium;"/>
			<Ship chance="5"	class="&HS_scIAVHeavy;"/>
			<Ship chance="10"	class="&HS_scSapphireYacht;"/>
			<Ship chance="3"	class="&HS_scScarabFreighter;"/>
			<Ship chance="14"	class="&HS_scRoninB;"/>
			<Ship chance="10"	class="&HS_scWolfenC;"/>
		</Table>
	</ShipTable>

</TranscendenceModule>
