<?xml version="1.0" encoding="utf-8"?>

<TranscendenceModule>
	
	<!-- Benedict Story Arc

	This type holds all global data and events for the Benedict and Sisters of
	Domina story arc.
	
	This is the main story arc in Stars of the Pilgrim.

	GLOBAL DATA
	
	firstDockedAtSisters: The tick on which the player first docked at a Sisters
			of Domina station. Nil if never docked.
			
	introDone: If True, then we no longer need to show the Benedict Intro screen
			at the Sisters of Domina.
			
	clues: There are 3 opportunities for the player to share information with
			Benedict and/or Fiona. Each time the player does so, we increment
			this variable.
			
	-->

	<Type UNID="&SOTP_unidBenedictStoryArc;">
		<Events>
			<GetGlobalDockScreen>
				(switch
					;	If we're not a pilgrim, then nothing to do.
						
					(not (= (objGetProperty gPlayerShip 'characterClass) &RPG_unidPilgrimClass;))
						Nil
							
					;	If we're in the starting system, and if we dock with a Sisters
					;	of Domina station, and if this is the first time we've docked,
					;	then show the intro screen
						
					(and (= (objGetType gSource) &HS_stSistersOfDomina;)
							(not (objGetProperty gSource 'abandoned))
							(= (sysGetNode) (objGetProperty gPlayerShip 'startingSystem))
							(not (typGetData &SOTP_unidBenedictStoryArc; 'firstDockedAtSisters))
							)
						{	screen:&SOTP_dsBenedictIntro;			priority:4	}

					;	In the Eridani system, if we dock with Bering station, and if
					;	we started in Eridani, and if we are a pilgrim, then we
					;	show our home.
				
					(and (or 
							(and 
								(= (objGetType gSource) &HS_stCommonwealthResidentials;)
								(objGetData gSource 'PilgrimHome)
								)
							(= (objGetType gSource) &HS_stBeringStation;)
							)
							(not (objGetProperty gSource 'abandoned))
							(= (sysGetNode) (objGetProperty gPlayerShip 'startingSystem))
							)
						{	screen:&HS_dsPilgrimBeringStation;		priority:6	}
							
					;	Otherwise, nothing

					Nil
					)
			</GetGlobalDockScreen>

			<OnGlobalSystemDiagnostics>
				(block (
					(curSystem (sysGetNode))
					)
					(switch
						(= curSystem 'SE)
							(block (sistersObj missionObj)
								(diagCreatePlayerShip)
								(setq sistersObj (sysFindObject gPlayerShip "TAN +sistersOfDomina;"))

								;	Benedict 00

								(diagAssert (setq missionObj (msnCreate &SOTP_msBenedictsDrones; sistersObj)) "Benedict 00: Unable to create.")
								(diagAssert (msnAccept missionObj) "Benedict 00: Unable to accept.")
								(diagAssert (msnSuccess missionObj) "Benedict 00: Unable to complete.")
								(msnReward missionObj)
								(msnSetProperty missionObj 'isDebriefed True)

								;	Benedict 01
								;
								;	This mission is created and accepted when we succeed at Benedict 00.

								(setq missionObj (msnFind "aP +unid:&SOTP_msBenedictTraining;;"))
								(diagAssert missionObj "Benedict 01: Failed to create.")
								(diagAssert (msnSuccess missionObj) "Benedict 01: Unable to complete.")
								(msnReward missionObj)
								(msnSetProperty missionObj 'isDebriefed True)

								;	Benedict 02

								(diagAssert (setq missionObj (msnCreate &SOTP_msBenedictAndFiona; sistersObj)) "Benedict 02: Unable to create.")
								(diagAssert (msnAccept missionObj) "Benedict 02: Unable to accept.")
								(diagAssert (msnSuccess missionObj) "Benedict 02: Unable to complete.")
								(msnReward missionObj)
								(msnSetProperty missionObj 'isDebriefed True)

								(objDestroy gPlayerShip)
								(setq gPlayerShip Nil)
								)

						(sysHasAttribute 'newBeyond)
							(block (colonyObj)
								(switch
									;	If we already finished Benedict 04, then we're done.

									(msnFind "r +unid:&SOTP_msBenedictInNewBeyond;;")
										Nil

									;	If this is not the Stormhound system, then we're done.

									(and (typ@ &SOTP_msBenedictInNewBeyond; 'stormhoundSystem)
											(!= curSystem (typ@ &SOTP_msBenedictInNewBeyond; 'stormhoundSystem))
											)
										Nil

									;	If there is no Commonwealth colony here, then we're done.

									(not (setq colonyObj (@ (sysFindObject Nil "TA +unid:&HS_stCommonwealthColony;;") 0)))
										Nil

									;	Create the mission

									(block (missionObj)
										(diagCreatePlayerShip)

										(diagAssert (setq missionObj (msnCreate &SOTP_msBenedictInNewBeyond; colonyObj)) "Benedict 04: Unable to create.")
										(diagAssert (msnAccept missionObj) "Benedict 04: Unable to accept.")
										(diagAssert (msnSuccess missionObj) "Benedict 04: Unable to complete.")
										(msnReward missionObj)
										(msnSetProperty missionObj 'isDebriefed True)
										
										(objDestroy gPlayerShip)
										(setq gPlayerShip Nil)
										)
									)
								)

						(= curSystem 'SK)
							(block (missionObj)
								(diagAssert (setq missionObj (msnCreate &SOTP_msFionaInStKats; Nil)) "Benedict 05: Unable to create.")
								(diagAssert (msnAccept missionObj) "Benedict 05: Unable to accept.")
								)

						(= curSystem 'C5)
							(block (missionObj)
								(diagAssert (setq missionObj (msnCreate &SOTP_msFindHandOfSolace; Nil)) "Benedict 05A: Unable to create.")
								(diagAssert (msnAccept missionObj) "Benedict 05A: Unable to accept.")
								(diagAssert (msnSuccess missionObj) "Benedict 05A: Unable to complete.")
								(msnReward missionObj)
								(msnSetProperty missionObj 'isDebriefed True)
								)

						(or (= curSystem 'C6A) (= curSystem 'C6))
							(switch
								;	If we already finished Benedict 06, then we're done.

								(msnFind "r +unid:&SOTP_msInfiltratePenitents;;")
									Nil

								;	If C6A exists and we're in C6, then skip

								(and (= curSystem 'C6) (find (sysGetNodes) 'C6A))
									Nil

								;	Continue

								(block (
									(sources (append
										(sysFindObject Nil "TA +unid:&HS_stCommonwealthColonyArmed;;")
										(sysFindObject Nil "TA +unid:&HS_stSistersOfDomina;;")
										))
									(sourceObj (@ sources 0))

									missionObj
									)
									(if (not (msnFind "r +unid:&SOTP_msFindHandOfSolace;; +property:isSuccess;"))
										(error "Benedict 06: Did not finish previous mission.")
										)

									(diagCreatePlayerShip)
									(if (not sourceObj)
										(error "Benedict 06: Unable to find mission-giver station.")
										)

									(diagAssert (setq missionObj (msnCreate &SOTP_msInfiltratePenitents; sourceObj)) "Benedict 06: Unable to create.")
									(diagAssert (msnAccept missionObj) "Benedict 06: Unable to accept.")
									(diagAssert (msnSuccess missionObj) "Benedict 06: Unable to complete.")
									(msnReward missionObj)
									(msnSetProperty missionObj 'isDebriefed True)
										
									(objDestroy gPlayerShip)
									(setq gPlayerShip Nil)
									)
								)

						(= curSystem 'CD)
							(block (
								(sourceObj (@ (sysFindObject Nil "TA +unid:&HS_stCathedralOfDomina;;") 0))

								missionObj
								)
								(diagCreatePlayerShip)
								(if (not sourceObj)
									(error "Benedict 07: Unable to find mission-giver station.")
									)

								(diagAssert (setq missionObj (msnCreate &SOTP_msRescueBenedict; sourceObj)) "Benedict 07: Unable to create.")
								(diagAssert (msnAccept missionObj) "Benedict 07: Unable to accept.")
								(diagAssert (msnSuccess missionObj) "Benedict 07: Unable to complete.")
								(msnReward missionObj)
								(msnSetProperty missionObj 'isDebriefed True)
										
								(objDestroy gPlayerShip)
								(setq gPlayerShip Nil)
								)

						(= curSystem 'EC)
							(block (
								(sourceObj (@ (sysFindObject Nil "sA +unid:&HS_scStormhoundAquila;;") 0))

								missionObj
								)
								(diagCreatePlayerShip)
								(if (not sourceObj)
									(error "Benedict 08: Unable to find mission-giver station.")
									)

								(diagAssert (setq missionObj (msnCreate &SOTP_msRescueChildrenFromPenitents; sourceObj)) "Benedict 08: Unable to create.")
								(diagAssert (msnAccept missionObj) "Benedict 08: Unable to accept.")
								(diagAssert (msnSuccess missionObj) "Benedict 08: Unable to complete.")
								(msnReward missionObj)
								(msnSetProperty missionObj 'isDebriefed True)
										
								(objDestroy gPlayerShip)
								(setq gPlayerShip Nil)
								)
						)
					)
			</OnGlobalSystemDiagnostics>

			<OnGlobalEndDiagnostics>
				(block ()
					(if (not (msnFind "r +unid:&SOTP_msBenedictInNewBeyond;;"))
						(print "WARNING: Benedict 04 mission was not created.")
						)
					)
			</OnGlobalEndDiagnostics>
		</Events>
	</Type>
	
<!-- DOCK SCREENS -->

	<!-- Benedict Intro
	
	GLOBAL DATA
	
	q1, q2, ... q{n}: These are set to True if the player has already been given
			answers to the question.
	
	-->

	<DockScreen UNID="&SOTP_dsBenedictIntro;"
			nestedScreen=		"true"
			inherit=			"&RPG_dsDockScreenBase;"

			attributes=			"eridaniScript"
			>

		<Panes>
			<Default>
				<OnPaneInit>
					(block (
						(nextActionPos 0)
						(desc "")
						(meetBenedict 
							(and (typGetData &SOTP_dsBenedictIntro; 'q1)
								(typGetData &SOTP_dsBenedictIntro; 'q2)
								(typGetData &SOTP_dsBenedictIntro; 'q3)
								)
							)
						)
						
						;	Set the description
						
						(switch
							(not (typGetData &SOTP_unidBenedictStoryArc; 'firstDockedAtSisters))
								(setq desc (typTranslate &SOTP_dsBenedictIntro; 'IntroFirst))
							
							(not (scrGetData gScreen 'answerQ))
								(setq desc (typTranslate &SOTP_dsBenedictIntro; 'IntroReturning))
								
							(setq desc
								(typTranslate &SOTP_dsBenedictIntro; (cat (scrGetData gScreen 'answerQ) ":Answer"))
								)
							)
							
						;	Add Benedict information, if necessary
						
						;(if meetBenedict
						;	(setq desc (cat desc (typTranslate &SOTP_dsBenedictIntro; 'BenedictMeeting)))
						;	)
							
						(scrSetDesc gScreen desc)
						
						;	Add unanswered questions as actions:
						
						(if (not (typGetData &SOTP_dsBenedictIntro; 'q1))
							(block Nil
								(scrAddAction gScreen 'q1 nextActionPos
									(typTranslate &SOTP_dsBenedictIntro; "q1:Label")
									(block Nil
										(scrSetData gScreen 'answerQ 'q1)
										(typSetData &SOTP_dsBenedictIntro; 'q1 True)
										(scrRefreshScreen gScreen)
										)
									)
								(setq nextActionPos (add nextActionPos 1))
								)
							)
							
						(if (not (typGetData &SOTP_dsBenedictIntro; 'q2))
							(block Nil
								(scrAddAction gScreen 'q2 nextActionPos
									(typTranslate &SOTP_dsBenedictIntro; "q2:Label")
									(block Nil
										(scrSetData gScreen 'answerQ 'q2)
										(typSetData &SOTP_dsBenedictIntro; 'q2 True)
										(scrRefreshScreen gScreen)
										)
									)
								(setq nextActionPos (add nextActionPos 1))
								)
							)
							
						(if (not (typGetData &SOTP_dsBenedictIntro; 'q3))
							(block Nil
								(scrAddAction gScreen 'q3 nextActionPos
									(typTranslate &SOTP_dsBenedictIntro; "q3:Label")
									(block Nil
										(scrSetData gScreen 'answerQ 'q3)
										(typSetData &SOTP_dsBenedictIntro; 'q3 True)
										(scrRefreshScreen gScreen)
										)
									)
								(setq nextActionPos (add nextActionPos 1))
								)
							)
							
						;	Remember the first time we talk to the Sisters.
						
						(if (not (typGetData &SOTP_unidBenedictStoryArc; 'firstDockedAtSisters))
							(typSetData &SOTP_unidBenedictStoryArc; 'firstDockedAtSisters (unvGetTick))
							)
							
						;	If this is the last answer, then we continue with Benedict.
						
						(scrShowAction gScreen 'actionBenedict meetBenedict)
						(scrShowAction gScreen 'actionDone (not meetBenedict))
						)
				</OnPaneInit>

				<Actions>
					<Action id="actionBenedict" default="true" cancel="true">
						(block (theMission)
						
							;	If we listened this far, we get to use the sanctum
							
							(objSetData gSource "freeSanctum" True)
							
							;   Intro done
							
							(scrShowPane gScreen 'IntroDone)
						
							;	Exit the screen so when we return, we're back at the main screen
							
							;(scrExitScreen gScreen)
							
							;	If we have an open mission or if the first Benedict mission is
							;	available, then show it.
							
							;(if	(or (setq theMission (@ (msnFind gSource "oS") 0))
							;		(setq theMission (msnCreate &SOTP_msBenedictsDrones; gSource)))
							;	(scrShowScreen gScreen &RPG_dsRPGMission;
							;		{
							;		missionObj: theMission
							;		})
							;	)
							)
					</Action>
					
					<Action id="actionDone" cancel="1">
						(scrShowPane gScreen "IntroSkip")
					</Action>
				</Actions>
			</Default>
			
			<IntroDone>
				<OnPaneInit>
					(scrSetDesc gScreen (typTranslate &SOTP_dsBenedictIntro; "BenedictMeeting"))
				</OnPaneInit>
				
				<Actions>
					<Action id="actionContinue" default="1" cancel="1">
						(block (theMission)
						
							;	Exit the screen so when we return, we're back at the main screen
							
							(scrExitScreen gScreen)
							
							;	If we have an open mission or if the first Benedict mission is
							;	available, then show it.
							
							(if	(or (setq theMission (@ (msnFind gSource "oS") 0))
									(setq theMission (msnCreate &SOTP_msBenedictsDrones; gSource)))
								(scrShowScreen gScreen &RPG_dsRPGMission;
									{
									missionObj: theMission
									})
								)
							)
					</Action>
				</Actions>
			</IntroDone>
			
			<IntroSkip>
				<OnPaneInit>
					(scrSetDesc gScreen (typTranslate &SOTP_dsBenedictIntro; "IntroSkip"))
				</OnPaneInit>
				
				<Actions>
					<Action id="actionContinue" default="1" cancel="1">
						(block (theMission)
						
							;	Exit the screen so when we return, we're back at the main screen
							
							(scrExitScreen gScreen)
							
							;	If we have an open mission or if the first Benedict mission is
							;	available, then show it.
							
							(if	(or (setq theMission (@ (msnFind gSource "oS") 0))
									(setq theMission (msnCreate &SOTP_msBenedictsDrones; gSource)))
								(scrShowScreen gScreen &RPG_dsRPGMission;
									{
									missionObj: theMission
									})
								)
							)
					</Action>
				</Actions>
			</IntroSkip>
		</Panes>
		
		<Language>
			<Text id="actionBenedict">[C]ontinue</Text>
			<Text id="actionDone">[Esc] Done</Text>
			
			<Text id="IntroFirst">

				You are docked at an abbey of the Sisters of Domina.
				A woman in a flowing cardinal robe approaches you.
							
				"Welcome, pilgrim! Your journey to the Galactic Core has just begun.
				Your path will be filled with many obstacles, but do not worry:
				Domina chooses only those who have the strength to succeed."

			</Text>
			<Text id="IntroReturning">

				The abbess greets you:
					
				"Welcome back, %name%! Your journey to the Galactic Core has just begun.
				Whatever obstacles you've faced so far are nothing compared to what
				awaits you. Take comfort in Domina's guidance."

			</Text>
			<Text id="IntroSkip">

				The abbess signals an unseen companion and a stout man emerges from
				the shadows. He marches to the abbess's side, looking past you at
				your ship.
					
				The abbess continues: "This is Benedict, our most valuable friend.
				He will help you prepare for your journey."

			</Text>
			
			<Text id="q1:Label">*"Who is [D]omina?"</Text>
			<Text id="q1:Answer">

				"Domina is the divine intelligence who brought you here!
					
				"You can feel her in your thoughts, can't you? She compels you
				to make the long journey to the Core.
					
				"I envy you! Very few are chosen by Domina, and though we see
				only a fraction of her plan, we know she fights to defend all life
				in the Galaxy. Whatever her plan, your journey will affect
				all humanity.
					
				"Perhaps when you reach her you will understand."

			</Text>
			
			<Text id="q2:Label">*"How do I reach the [G]alactic Core?"</Text>
			<Text id="q2:Answer">

				"The stargates will take you. Seek them out and enter.
				But be prepared for many obstacles. You must grow stronger to reach the Core.
					
				"You will upgrade your ship in your travels, and eventually you'll
				command terrible energies, enough to defeat anyone who blocks your path."

			</Text>
			
			<Text id="q3:Label">*"[W]hat obstacles will I face?"</Text>
			<Text id="q3:Answer">

				"Star travel is dangerous, even in the Commonwealth.
				You'll face pirates, outlaws and worse before you reach the Core.
				But we can prepare you."

			</Text>
			
			<Text id="BenedictMeeting">

				The abbess signals an unseen companion and a stout man emerges from
				the shadows. He marches to the abbess's side, looking past you at
				your ship.
					
				The abbess continues: "This is Benedict, our most valuable friend.
				He will help you."

			</Text>

			<Script id="sotp:0001">

				OPENING CRAWL

				%id=&HS_adPart1Desc;/openingCrawl%

				ERIDANI SYSTEM - SISTERS OF DOMINA STATION

				%id=IntroFirst%

				|	PLAYER
				|	%id=q1:Label%

				|	ABBESS
				|	%id=q1:Answer%

				|	PLAYER
				|	%id=q2:Label%

				|	ABBESS
				|	%id=q2:Answer%

				|	PLAYER
				|	%id=q3:Label%
				
				|	ABBESS
				|	%id=q3:Answer%

				%id=BenedictMeeting%

				%id=&SOTP_msBenedictsDrones;/Intro%

				|	BENEDICT
				|	%id=&SOTP_msBenedictsDrones;/Briefing%

				|	PLAYER
				|	%id=&SOTP_msBenedictsDrones;/AcceptLabel%

				|	BENEDICT
				|	%id=&SOTP_msBenedictsDrones;/acceptReply1.mouse%
				
				|	BENEDICT
				|	%id=&SOTP_msBenedictsDrones;/textSuccessDebrief1%

				|	%id=&SOTP_msBenedictsDrones;/textSuccessDebrief2%

				|	BENEDICT
				|	%id=&SOTP_msBenedictTraining;/visitHabitat:Begin%

				ERIDANI SYSTEM - COMMONWEALTH HABITAT

				%id=&HS_msDestroyThreatToSlums;/textIntro%

				|	STATION MASTER
				|	%id=&HS_msDestroyThreatToSlums;/Briefing:centauriWarlords%
				
				|	PLAYER
				|	Accept

				|	STATION MASTER
				|	%id=&HS_msDestroyThreatToSlums;/AcceptReply%

				The player destroys the Centauri warlords outpost and returns to
				the Commonwealt habitat for her reward.

				|	STATION MASTER
				|	%id=&HS_msDestroyThreatToSlums;/SuccessDebrief:centauriWarlords%

				ERIDANI SYSTEM - SISTERS OF DOMINA STATION

				|	BENEDICT
				|	%id=&SOTP_msBenedictTraining;/visitHabitat:Debrief%

				|	BENEDICT
				|	%id=&SOTP_msBenedictTraining;/loot:Begin%

				Player loots the station.

				|	BENEDICT
				|	%id=&SOTP_msBenedictTraining;/loot:Debrief%

				|	BENEDICT
				|	%id=&SOTP_msBenedictTraining;/sellLoot:Begin%

				Player sells the loot.

				|	BENEDICT
				|	%id=&SOTP_msBenedictTraining;/sellLoot:Debrief%

				|	BENEDICT
				|	%id=&SOTP_msBenedictTraining;/exploreSystem:Begin:Many%

				Player explores the system.

				|	BENEDICT
				|	%id=&SOTP_msBenedictTraining;/exploreSystem:Debrief%

				|	BENEDICT
				|	%id=&SOTP_msBenedictTraining;/installWMD:Begin%

				Player buys a weapon and installs it.

				|	BENEDICT
				|	%id=&SOTP_msBenedictTraining;/installWMD.debriefLauncher%

				|	BENEDICT
				|	%id=&SOTP_msBenedictTraining;/attackHiddenEnemy:Begin:Abbasid%

				|	%id=&SOTP_msBenedictTraining;/attackHiddenEnemy:Begin:Normal%


				Player destroys Abbasid outpost.

				|	BENEDICT
				|	%id=&SOTP_msBenedictTraining;/attackHiddenEnemy:Debrief%

				|	BENEDICT
				|	%id=&SOTP_msBenedictTraining;/installSmartCannon.begin1%

				Player installs SmartCannon.

				|	BENEDICT
				|	%id=&SOTP_msBenedictTraining;/installSmartCannon:Debrief%

				%id=&SOTP_msBenedictTraining;/fionaMission:Begin:1%

				|	BENEDICT
				|	%id=&SOTP_msBenedictTraining;/fionaMission:Begin:2%

				|	%id=&SOTP_msBenedictTraining;/fionaMission:Begin:3a%

				Player defends the freighter.

				%id=&SOTP_msBenedictAndFiona;/successDebrief1%

				|	BENEDICT
				|	%id=&SOTP_msBenedictAndFiona;/successDebrief2%

				|	PLAYER
				|	%id=&SOTP_msBenedictAndFiona;/actionSuccess2%

				|	BENEDICT
				|	%id=&SOTP_msBenedictAndFiona;/successDebrief3%

				|	PLAYER
				|	%id=&SOTP_msBenedictAndFiona;/actionSuccess3%

				|	BENEDICT
				|	%id=&SOTP_msBenedictAndFiona;/successDebrief4%

				|	%id=&SOTP_msBenedictAndFiona;/successDebrief5a%

				|	PLAYER
				|	%id=&SOTP_msBenedictAndFiona;/actionDebrief5a%

				|	BENEDICT
				|	%id=&SOTP_msBenedictAndFiona;/successDebrief5b%

				NEW BEYOND - COMMONWEALTH STATION

				%id=&SOTP_msBenedictInNewBeyond;/firstIntro1%

				|	PLAYER
				|	%id=&SOTP_msBenedictInNewBeyond;/actionFirstIntro1%

				|	BENEDICT
				|	%id=&SOTP_msBenedictInNewBeyond;/firstIntro2%

				|	PLAYER
				|	%id=&SOTP_msBenedictInNewBeyond;/actionFirstIntro2%

				|	BENEDICT
				|	%id=&SOTP_msBenedictInNewBeyond;/firstIntro3%

				|	PLAYER
				|	%id=&SOTP_msBenedictInNewBeyond;/actionFirstIntro3%

				|	BENEDICT
				|	%id=&SOTP_msBenedictInNewBeyond;/firstIntro4%

				|	PLAYER
				|	%id=&SOTP_msBenedictInNewBeyond;/actionFirstIntro4%

				|	BENEDICT
				|	%id=&SOTP_msBenedictInNewBeyond;/firstIntro5%

				|	PLAYER
				|	%id=&SOTP_msBenedictInNewBeyond;/actionFirstIntro5%

				|	BENEDICT
				|	%id=&SOTP_msBenedictInNewBeyond;/Briefing%

				|	PLAYER
				|	%id=&SOTP_msBenedictInNewBeyond;/AcceptLabel%

				NEW BEYOND - STORMHOUND'S MEGAYACHT

				%id=&HS_scStormhoundYacht;/textFirstMeetingIntro1%

				|	PLAYER
				|	%id=&HS_scStormhoundYacht;/actionFirstMeetingIntro1%

				%id=&SOTP_msBenedictInNewBeyond;/StormhoundMeeting1%

				|	PLAYER
				|	%id=&SOTP_msBenedictInNewBeyond;/actionStormhoundMeeting1%

				|	STORMHOUND
				|	%id=&SOTP_msBenedictInNewBeyond;/StormhoundMeeting2%

				|	PLAYER
				|	%id=&SOTP_msBenedictInNewBeyond;/actionStormhoundMeeting2%

				|	STORMHOUND
				|	%id=&SOTP_msBenedictInNewBeyond;/StormhoundMeeting3%

				|	PLAYER
				|	%id=&SOTP_msBenedictInNewBeyond;/actionStormhoundMeeting3%

				|	STORMHOUND
				|	%id=&SOTP_msBenedictInNewBeyond;/StormhoundMeeting4%

				|	PLAYER
				|	%id=&SOTP_msBenedictInNewBeyond;/actionStormhoundMeeting4%

				|	STORMHOUND
				|	%id=&SOTP_msBenedictInNewBeyond;/StormhoundMeeting5%

				|	PLAYER
				|	%id=&SOTP_msBenedictInNewBeyond;/actionStormhoundMeeting5%

				|	STORMHOUND
				|	%id=&SOTP_msBenedictInNewBeyond;/StormhoundMeeting6%

				NEW BEYOND - COMMONWEALTH STATION

				%id=&SOTP_msBenedictInNewBeyond;/SuccessDebrief1%

				|	PLAYER
				|	%id=&SOTP_msBenedictInNewBeyond;/actionSuccessDebrief1b%

				|	BENEDICT
				|	%id=&SOTP_msBenedictInNewBeyond;/SuccessDebriefB1%

				|	PLAYER
				|	%id=&SOTP_msBenedictInNewBeyond;/actionSuccessDebriefB1%

				|	BENEDICT
				|	%id=&SOTP_msBenedictInNewBeyond;/SuccessDebriefB2%

				|	PLAYER
				|	%id=&SOTP_msBenedictInNewBeyond;/actionSuccessDebriefB2b%

				|	BENEDICT
				|	%id=&SOTP_msBenedictInNewBeyond;/SuccessDebriefC1%

				|	PLAYER
				|	%id=&SOTP_msBenedictInNewBeyond;/actionSuccessDebriefC1%

				|	BENEDICT
				|	%id=&SOTP_msBenedictInNewBeyond;/SuccessDebriefC2%

				ST. KATHARINE'S STAR SYSTEM - UNIVERSITY HOSPITAL

				%id=&SOTP_msFionaInStKats;/descIntro1%

				|	PLAYER
				|	%id=&SOTP_msFionaInStKats;/actionIntro1%

				|	FIONA
				|	%id=&SOTP_msFionaInStKats;/descIntro2%

				|	PLAYER
				|	%id=&SOTP_msFionaInStKats;/actionIntro2%

				|	FIONA
				|	%id=&SOTP_msFionaInStKats;/descIntro3%

				|	%id=&SOTP_msFionaInStKats;/descIntro4%

				|	PLAYER
				|	%id=&SOTP_msFionaInStKats;/actionIntro4%

				|	FIONA
				|	%id=&SOTP_msFionaInStKats;/descIntro5%

				|	PLAYER
				|	%id=&SOTP_msFionaInStKats;/actionIntro5%

				|	FIONA
				|	%id=&SOTP_msFionaInStKats;/descIntro6%

				|	PLAYER
				|	%id=&SOTP_msFionaInStKats;/actionIntro6%

				|	FIONA
				|	%id=&SOTP_msFionaInStKats;/descIntro7%

				|	PLAYER
				|	%id=&SOTP_msFionaInStKats;/actionIntro7A%

				|	FIONA
				|	%id=&SOTP_msFionaInStKats;/descIntro8%

				|	PLAYER
				|	%id=&SOTP_msFionaInStKats;/actionIntro8%

				|	FIONA
				|	%id=&SOTP_msFionaInStKats;/descBriefing1%

				|	PLAYER
				|	%id=&SOTP_msFionaInStKats;/actionAccept%

				UNGOVERNED TERRITORIES - HUGO SANDOVAL'S SHIP

				%id=&HS_scHugoSandovalArmstrong;/textFirstMeetingIntro1%

				|	SANDOVAL
				|	%id=&SOTP_msFindHandOfSolace;/textFirstIntro1.female%

				|	PLAYER
				|	%id=&SOTP_msFindHandOfSolace;/actionFirstIntro1%

				|	SANDOVAL
				|	%id=&SOTP_msFindHandOfSolace;/textFirstIntro2%

				|	PLAYER
				|	%id=&SOTP_msFindHandOfSolace;/actionFirstIntro2%

				|	SANDOVAL
				|	%id=&SOTP_msFindHandOfSolace;/textFirstIntro3%

				|	PLAYER
				|	%id=&SOTP_msFindHandOfSolace;/actionFirstIntro3%

				|	SANDOVAL
				|	%id=&SOTP_msFindHandOfSolace;/textFirstIntro4%

				|	PLAYER
				|	%id=&SOTP_msFindHandOfSolace;/actionFirstIntro4%

				|	SANDOVAL
				|	%id=&SOTP_msFindHandOfSolace;/textBriefing1%

				|	PLAYER
				|	%id=&SOTP_msFindHandOfSolace;/actionAccept%

				The player and Sandoval search for the Hand of Solace. 
				Eventually they find the wreckage, but they see that another 
				ship is already docked with it. They board the wreck.

				UNGOVERNED TERRITORIES - WRECK OF THE HAND OF SOLACE

				%id=&SOTP_stHandOfSolaceWreck;/textHoS1%

				|	PLAYER
				|	%id=&SOTP_stHandOfSolaceWreck;/actionHoS1%

				|	BENEDICT
				|	%id=&SOTP_stHandOfSolaceWreck;/textHoS2%

				|	SANDOVAL
				|	%id=&SOTP_stHandOfSolaceWreck;/textHoS3%

				|	PLAYER
				|	%id=&SOTP_stHandOfSolaceWreck;/actionHoS3%

				|	BENEDICT
				|	%id=&SOTP_stHandOfSolaceWreck;/textHoS4%

				|	PLAYER
				|	%id=&SOTP_stHandOfSolaceWreck;/actionHoS4%

				|	SANDOVAL
				|	%id=&SOTP_stHandOfSolaceWreck;/textHoS5%

				|	PLAYER
				|	%id=&SOTP_stHandOfSolaceWreck;/actionHoS5%

				|	SANDOVAL
				|	%id=&SOTP_stHandOfSolaceWreck;/textHoS6%

				|	PLAYER
				|	%id=&SOTP_stHandOfSolaceWreck;/actionHoS6%

				|	SANDOVAL
				|	%id=&SOTP_stHandOfSolaceWreck;/textHoS7%

				|	PLAYER
				|	%id=&SOTP_stHandOfSolaceWreck;/actionHoS7%

				|	SANDOVAL
				|	%id=&SOTP_stHandOfSolaceWreck;/textHoS8%

				UNGOVERNED TERRITORIES - SISTERS OF DOMINA STATION

				%id=&SOTP_msInfiltratePenitents;/descIntro1%

				|	PLAYER
				|	%id=&SOTP_msInfiltratePenitents;/actionIntro1%

				|	BENEDICT
				|	%id=&SOTP_msInfiltratePenitents;/descIntro2%

				|	PLAYER
				|	%id=&SOTP_msInfiltratePenitents;/actionIntro2%

				|	BENEDICT
				|	%id=&SOTP_msInfiltratePenitents;/descIntro3%

				|	PLAYER
				|	%id=&SOTP_msInfiltratePenitents;/actionIntro3%

				|	BENEDICT
				|	%id=&SOTP_msInfiltratePenitents;/Briefing%

				|	PLAYER
				|	%id=&SOTP_msInfiltratePenitents;/AcceptLabel%

				UNGOVERNED TERRITORIES - PENITENT STATION

				%id=&SOTP_evBenedict06PenitentBase;/descPenitents1%

				%id=&SOTP_evBenedict06PenitentBase;/descPenitents2%

				|	PLAYER
				|	%id=&SOTP_evBenedict06PenitentBase;/actionPenitents2B%

				|	PENITENT
				|	%id=&SOTP_evBenedict06PenitentBase;/descPenitents5%

				|	PLAYER
				|	%id=&SOTP_evBenedict06PenitentBase;/actionPenitents5%
				
				|	PENITENT
				|	%id=&SOTP_evBenedict06PenitentBase;/descPenitents6%

				|	PLAYER
				|	%id=&SOTP_evBenedict06PenitentBase;/actionNowWhat%

				|	BENEDICT
				|	%id=&SOTP_evBenedict06PenitentBase;/descPenitents8%

				%id=&SOTP_evBenedict06PenitentBase;/descPenitents9%

				%id=&SOTP_evBenedict06PenitentBase;/descPenitents10%

				|	PLAYER
				|	%id=&SOTP_evBenedict06PenitentBase;/actionPenitents10%

				|	BENEDICT
				|	%id=&SOTP_evBenedict06PenitentBase;/descPenitents11%

				%id=&SOTP_evBenedict06PenitentBase;/descPenitents12%

				The player escapes the Penitent station and returns to the 
				Sisters of Domina.

				UNGOVERNED TERRITORIES - SISTERS OF DOMINA STATION

				%id=&SOTP_msInfiltratePenitents;/descSuccess1A%

				%id=&SOTP_msInfiltratePenitents;/descSuccess2%

				|	FIONA
				|	%id=&SOTP_msInfiltratePenitents;/descSuccess3%

				|	PLAYER
				|	%id=&SOTP_msInfiltratePenitents;/actionSuccess3%

				|	FIONA
				|	%id=&SOTP_msInfiltratePenitents;/descSuccess4%

				|	PLAYER
				|	%id=&SOTP_msInfiltratePenitents;/actionSuccess4%

				SANCTUARY SYSTEM - CATHEDRAL OF DOMINA

				%id=&SOTP_msRescueBenedict;/textIntro1%

				|	PLAYER
				|	%id=&SOTP_msRescueBenedict;/actionIntro1%

				|	FIONA
				|	%id=&SOTP_msRescueBenedict;/textIntro2%

				|	PLAYER
				|	%id=&SOTP_msRescueBenedict;/actionIntro2%

				|	FIONA
				|	%id=&SOTP_msRescueBenedict;/textIntro3%

				%id=&SOTP_msRescueBenedict;/textIntro9%

				%id=&SOTP_msRescueBenedict;/textIntro10%

				%id=&SOTP_msRescueBenedict;/textIntro11%

				%id=&SOTP_msRescueBenedict;/textIntro12%

				%id=&SOTP_msRescueBenedict;/textIntro13%

				%id=&SOTP_msRescueBenedict;/textIntro14%

				|	PLAYER
				|	%id=&SOTP_msRescueBenedict;/actionIntro14%

				|	FIONA
				|	%id=&SOTP_msRescueBenedict;/textIntro15%

				|	PLAYER
				|	%id=&SOTP_msRescueBenedict;/actionIntro15%

				|	FIONA
				|	%id=&SOTP_msRescueBenedict;/textIntro16%

				|	PLAYER
				|	%id=&SOTP_msRescueBenedict;/actionIntro16%

				|	SISTER MCMURRAY
				|	%id=&SOTP_msRescueBenedict;/textIntro17%

				|	PLAYER
				|	%id=&SOTP_msRescueBenedict;/actionIntro17%

				|	SISTER MCMURRAY
				|	%id=&SOTP_msRescueBenedict;/textIntro18%

				|	PLAYER
				|	%id=&SOTP_msRescueBenedict;/actionIntro18%

				|	SISTER MCMURRAY
				|	%id=&SOTP_msRescueBenedict;/textIntro19%

				|	PLAYER
				|	%id=&SOTP_msRescueBenedict;/actionIntro19%

				|	SISTER MCMURRAY
				|	%id=&SOTP_msRescueBenedict;/textIntro20%

				|	FIONA
				|	%id=&SOTP_msRescueBenedict;/textBriefing1%

				|	PLAYER
				|	%id=&SOTP_msRescueBenedict;/actionAccept%

				|	SANDOVAL
				|	%id=&SOTP_msRescueBenedict;/AcceptReply%

				The player, Fiona, and Sandoval intercept the Penitent ship and
				disable it. They all dock with the wreckage.

				SANCTUARY SYSTEM - PENITENT DESTROYER

				%id=&SOTP_msRescueBenedict;/textRescueBenedict1%

				%id=&SOTP_msRescueBenedict;/textRescueBenedict2%

				|	PLAYER
				|	%id=&SOTP_msRescueBenedict;/actionRescueBenedict2%

				|	FIONA AND BENEDICT
				|	%id=&SOTP_msRescueBenedict;/textRescueBenedict3%

				|	%id=&SOTP_msRescueBenedict;/textRescueBenedict4%

				|	%id=&SOTP_msRescueBenedict;/textRescueBenedict5%

				|	PLAYER
				|	%id=&SOTP_msRescueBenedict;/actionRescueBenedict5A%

				|	FIONA
				|	%id=&SOTP_msRescueBenedict;/textRescueBenedict6%

				ETA CETI SYSTEM - CSS CHANGELING

				%id=&HS_scStormhoundAquila;/textFirstMeetingIntro1%

				|	PLAYER
				|	%id=&HS_scStormhoundAquila;/actionFirstMeetingIntro1%

				|	STORMHOUND
				|	%id=&HS_scStormhoundAquila;/textFirstMeetingIntro2%

				%id=&SOTP_msRescueChildrenFromPenitents;/textRescue1%

				%id=&SOTP_msRescueChildrenFromPenitents;/textRescue2%

				%id=&SOTP_msRescueChildrenFromPenitents;/textRescue3%

				|	PLAYER
				|	%id=&SOTP_msRescueChildrenFromPenitents;/actionRescue3%

				%id=&SOTP_msRescueChildrenFromPenitents;/textRescue4%

				|	CREATURE
				|	%id=&SOTP_msRescueChildrenFromPenitents;/textRescue5%

				|	PLAYER
				|	%id=&SOTP_msRescueChildrenFromPenitents;/actionRescue5%

				|	CREATURE
				|	%id=&SOTP_msRescueChildrenFromPenitents;/textRescue6%

				|	PLAYER
				|	%id=&SOTP_msRescueChildrenFromPenitents;/actionRescue6%

				%id=&SOTP_msRescueChildrenFromPenitents;/textRescue7%

				|	PLAYER
				|	%id=&SOTP_msRescueChildrenFromPenitents;/actionRescue7%

				|	STORMHOUND
				|	%id=&SOTP_msRescueChildrenFromPenitents;/textRescue8%

				|	PLAYER
				|	%id=&SOTP_msRescueChildrenFromPenitents;/actionRescue8%

				|	STORMHOUND
				|	%id=&SOTP_msRescueChildrenFromPenitents;/textRescue9%

				|	PLAYER
				|	%id=&SOTP_msRescueChildrenFromPenitents;/actionRescue9%

				|	STORMHOUND
				|	%id=&SOTP_msRescueChildrenFromPenitents;/textRescue10%

				|	PLAYER
				|	%id=&SOTP_msRescueChildrenFromPenitents;/actionRescue10%

				|	STORMHOUND
				|	%id=&SOTP_msRescueChildrenFromPenitents;/textRescue11%

				|	STORMHOUND
				|	%id=&SOTP_msRescueChildrenFromPenitents;/textRescue12%

				|	PLAYER
				|	%id=&SOTP_msRescueChildrenFromPenitents;/actionRescue12%

				%id=&SOTP_msRescueChildrenFromPenitents;/textRescue13%

				%id=&SOTP_msRescueChildrenFromPenitents;/textRescue14%

				%id=&SOTP_msRescueChildrenFromPenitents;/textRescue15%

				%id=&SOTP_msRescueChildrenFromPenitents;/textRescue16%

			</Script>
		</Language>
	</DockScreen>

<!-- BASE CLASSES -->

	<MissionType unid="&SOTP_baBenedictMission;">
		<Image imageID="&SOTP_rsBenedictMission;"	imageWidth="384" imageHeight="192"/>

		<Language>
			<Text id="ArcName">Benedict &amp; Fiona</Text>
		</Language>
	</MissionType>

<!-- RESOURCE -->

	<Image UNID="&SOTP_rsBenedictMission;"		bitmap="Resources\BenedictMissionTile.jpg"			loadOnUse="true" />

</TranscendenceModule>
